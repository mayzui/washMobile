import{_ as n,o as s,c as a,d as e}from"./app.90217f76.js";const t={},p=e(`<h1 id="\u5355\u4F8B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5355\u4F8B\u6A21\u5F0F" aria-hidden="true">#</a> \u5355\u4F8B\u6A21\u5F0F</h1><h2 id="\u5355\u4F8B\u89E3\u51B3\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5355\u4F8B\u89E3\u51B3\u7684\u95EE\u9898" aria-hidden="true">#</a> \u5355\u4F8B\u89E3\u51B3\u7684\u95EE\u9898</h2><p>\u89E3\u51B3\u7C7B\u7684\u5B9E\u4F8B\u6D88\u8017\u8D44\u6E90,\u7136\u800C\u8FD9\u4E9B\u6D88\u8017\u5E76\u975E\u5FC5\u8981, \u4F8B\u5982\u6570\u636E\u5E93\u94FE\u63A5,\u8BA1\u7B97\u673A\u4E2D\u6253\u5F00\u8D44\u6E90\u7BA1\u7406\u5668\u5374\u5177\u6709\u552F\u4E00\u6027</p><h2 id="\u5355\u4F8B\u6A21\u5F0F\u7684\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5355\u4F8B\u6A21\u5F0F\u7684\u5B9A\u4E49" aria-hidden="true">#</a> \u5355\u4F8B\u6A21\u5F0F\u7684\u5B9A\u4E49</h2><blockquote><p>\u5B9A\u4E49\uFF1A\u5355\u4F8B\u6A21\u5F0Fsingleton\uFF0C\u662F\u4E00\u79CD\u7C7B\u7684\u8BBE\u8BA1\u53EA\u4F1A\u6700\u591A\u4EA7\u751F\u4E00\u4E2A\u5BF9\u8C61\u7684\u8BBE\u8BA1\u601D\u60F3</p></blockquote><h2 id="\u793A\u4F8B\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B\u4EE3\u7801" aria-hidden="true">#</a> \u793A\u4F8B\u4EE3\u7801</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>
<span class="token keyword">class</span>  <span class="token class-name-definition class-name">Singleton</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token variable">$instance</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7981\u6B62\u5916\u90E8new</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u4F7F\u7528\u5185\u90E8\u65B9\u6CD5\u5B9E\u4F8B\u5316\u5BF9\u8C61</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token variable">$instance</span> <span class="token keyword">instanceof</span> <span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token variable">$instance</span> <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token keyword">self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token variable">$instance</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7981\u6B62\u514B\u9686</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">function</span> <span class="token function-definition function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u53CD\u5E8F\u5217\u5316\u5BF9\u8C61</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;\u4E0D\u80FD\u53CD\u5E8F\u5217\u5316\u5355\u4F8B\u5BF9\u8C61&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment"># \u5BA2\u6237\u7AEF\u8C03\u7528</span>
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token class-name static-context">Singleton</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token class-name static-context">Singleton</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">===</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;\u5355\u4F8B&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;\u975E\u5355\u4F8B&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[p];function c(i,l){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","singleton.html.vue"]]);export{k as default};
